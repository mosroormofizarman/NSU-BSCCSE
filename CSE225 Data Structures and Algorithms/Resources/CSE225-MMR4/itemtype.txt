

 #include <fstream>
  const int MAX ITEMS = 5; 
 enum RelationType {LESS, GREATER, EQUAL}; 

 class ItemType 
 { 
    public: 
         ItemType () ; 
          RelationType ComparedTo(ItemType) const ; 
           void Print ( std :: ostream&) const ; 
           void Initialize ( int number) ; 
         private: 

          int value ; 
        };
 


 #include <fstream> 
 #include <iostream> 
 #include ”ItemType .h”


 ItemType :: ItemType () 
 { 
    value = 0;

 } 
 RelationType ItemType :: ComparedTo(ItemType otherItem ) const 
 { 
    if ( value < otherItem . value ) 
          return LESS; 
    else if ( value > otherItem.value ) 
         return GREATER; 
     else return EQUAL; 
 } 

 void ItemType :: Initialize ( int number) 

 { 
     value = number ; 
 } 

void ItemType :: Print ( std :: ostream& out) const
{ 
    out << value ; 
 } 